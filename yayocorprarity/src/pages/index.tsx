import { type NextPage, NextComponentType } from "next";
import Head from "next/head";
import Link from "next/link";
import React, {
  FormEvent,
  useState,
  ReactElement,
  FunctionComponent,
} from "react";

type TokenRarityEntry = {
  value: string;
  occurence: number;
  rarityScore: number;
};

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>YayoCorp Rarity Viewer - BECAUSE YOU NEED TO FLEX</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-neutral-900 text-white">
        <h1 className="font-bold">YayoCorp Rarity Viewer</h1>
        <a
          href="https://twitter.com/spuro69"
          className="italic hover:text-blue-300"
        >
          by @spuro69
        </a>
        <img
          src="https://yayo.fund/img/yayo/logo_full/logo-pink.png"
          className="h-48"
        />
        <a
          href="https://lmgtfy.app/?q=testosterone+supplements"
          className="text-center italic"
        >
          Looking up your rarity to price accordingly?
          <br />
          Click here!
        </a>
        <SpecificIdDisplay />
      </main>
    </>
  );
};

const SpecificIdDisplay: React.FC = () => {
  type TokenScores = {
    rarityScore: number;
    occurence: number;
    value: string;
  };

  const [tokenScores, setTokenScores] = useState<TokenScores[]>();
  const [scoreRanking, setScoreRanking] = useState<number>(0);

  const processIdRarityFetch = async (e: FormEvent<HTMLFormElement>) => {
    type IdDesired = {
      id_desired: string;
    };

    e.preventDefault();
    const data = new FormData(e.target as HTMLFormElement);
    const json = JSON.parse(JSON.stringify(Object.fromEntries(data.entries())));

    console.log(json as IdDesired);

    const response = await fetch(`/api/rarity/${json.id_desired}`);
    const resJson: { rarity: TokenScores[]; rank: number } =
      await response.json();

    console.log(resJson);

    setTokenScores(resJson.rarity);
    setScoreRanking(resJson.rank);
  };

  return (
    <div className="mt-[100px] flex flex-col rounded-md bg-red-500">
      <form
        onSubmit={async (e) => {
          processIdRarityFetch(e);
        }}
        className="flex flex-col gap-2 text-center"
      >
        <label>Submit your token #</label>
        <input type="text" name="id_desired" className="text-black" />
        <button>Submit</button>
      </form>
      <div className="grid grid-cols-3 p-2">
        <p>RANK</p>
        {scoreRanking}
        {tokenScores
          ? Object.entries(tokenScores).map(([key, entry], index) => {
              return (
                <div className="grid grid-cols-3 gap-2 text-center">
                  <div></div>
                  <div className="flex flex-col">
                    <p className="font-bold">{key}</p>
                    <div className="flex flex-col gap-2">
                      <p>{entry.occurence}</p>
                      <p>{entry.rarityScore}</p>
                    </div>
                  </div>
                </div>
              );
            })
          : ""}
      </div>
    </div>
  );
};

export default Home;
